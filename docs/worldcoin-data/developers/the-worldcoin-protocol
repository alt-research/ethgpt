<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta property="og:url" content="https://worldcoin.org/blog/developers/the-worldcoin-protocol"/><meta property="og:type" content="website"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:site" content="Worldcoin"/><meta name="viewport" content="width=device-width, initial-scale=1"/><link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png"/><link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png"/><link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png"/><link rel="manifest" href="/favicon/site.webmanifest"/><link rel="mask-icon" href="/favicon/safari-pinned-tab.svg" color="#191919"/><link rel="canonical" href="https://worldcoin.org/blog/developers/the-worldcoin-protocol"/><script type="application/ld+json">{"@context":"http://schema.org","@type":"BlogPosting","name":"Privacy-Preserving Proof-of-Personhood Protocol","headline":"Privacy-Preserving Proof-of-Personhood Protocol","image":"https://images.prismic.io/worldcoin-company-website/a612c903-6019-4299-b1a7-1e64e7c871f5_og_TWP.png?auto=compress,format","publisher":{"@type":"Organization","name":"Worldcoin","sameAs":"https://worldcoin.org","logo":{"@type":"ImageObject","url":"https://worldcoin.org/icons/logo.svg"}},"author":{"@type":"Person","name":"Remco Bloemen, Philipp Sippl"},"url":"https://worldcoin.org/the-worldcoin-protocol","mainEntityOfPage":{"@type":"WebPage","@id":"https://worldcoin.org/the-worldcoin-protocol"},"datePublished":"2022-04-21","dateCreated":"2022-04-21","dateModified":"2023-02-08","articleBody":"What Are We Building? We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP). We originally set out with the goal of airdropping a token to a billion people. Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side. While there are many projects out there building general purpose rollups (e.g., Arbitrum, Optimism, zksync), we came across the open source project Hubble, a minimal, application-specific rollup. It allows a highly efficient, but also permissionless and non-custodial airdrop at the scale of one billion people. Hubble’s open source contracts were already in great shape, and we decided to contribute a high-performance sequencer implementation written in Go, with the goal of deploying on mainnet as soon as possible. We managed to squeeze out quite some performance of the sequencer in the process. While there will be a separate deep dive on Hubble in the future, this post will focus on Semaphore, another open source project from the appliedzkp team. Because the Orb uses biometrics for the initial sign-up, we wanted to delink this step from the wallet and any future transactions to ensure the user’s privacy. So we settled on Semaphore because it not only allows us to add anonymity to a specific action, but also makes it very easy to reuse the setup for new applications, making future use cases possible. How Does Semaphore Work? The privacy in Semaphore is created by introducing a larger set of identities called “identity commitments,” which are hashes of a secret string, and comparable to a traditional public key. This set is represented as a Merkle tree in order to allow anyone in the set to efficiently prove membership. However, because this Merkle proof would leak an individual member’s identity, the proof needs to be verified in zero knowledge. This zero knowledge proof (ZKP) can then be transmitted to prove membership without leaking the identity, and be verified by anyone. The application using Semaphore decides how the set of identities is created. The smart contract has to implement custom logic for the “gatekeeper” function to add an identity to the set. In the case of Worldcoin, the uniqueness check on the IrisHash is the gatekeeper. The IrisHash provided and signed by an Orb has to be unique, and only then is the identity added to the set. Semaphore fundamentally has two main parts to it: a set of identities and a mechanism to prove membership. Users can create a zero knowledge proof that simultaneously proves three important claims: Membership “I am a member of the set.” One-shot “I have not made a claim before in this context.” Signal “I want to say this ....” Membership. The set of users is stored as a Merkle tree of public keys (identity commitments). To prove membership, a user proves they have a private key and a Merkle proof for public key in the tree. All of this, including the Merkle proof, is verified inside the zero-knowledge proof so no one can see which leaf was used or what the public key was. This is what provides perfect anonymity. An external observer sees only that the proof came from a member, without being able to see which member. One-shot. In nearly all applications, we want to make sure that each member gets to do something only once, (e.g., vote or spend a token). However, because membership is proven anonymously, we cannot tell if two proofs came from the same user. This is solved by having each proof publish a nullifier, which is a random number that is unique for each user. Thus, any proof from the same user will have the same nullifier, so we can detect them and know that they are coming from the same user. Nullifiers are similar to random pseudonyms that cannot be linked to the real identity. Nullifiers have been used since the first privacy coins. However, Semaphore goes beyond regular nullifiers. Take voting as an example: say we want every user to cast one vote on each proposal. With regular nullifiers, we wouldn’t be able to track users' votes across proposals because they have the same nullifier. Instead, we need a new random pseudonym for each voting round. Semaphore makes this possible by mixing in an unique number for each round: the external nullifier. This is powerful as it allows us to build a set of all humans that everyone can build on. Signal. To continue the example of voting, each user needs to be able to voice their decision. If we simply bundled their decision with a zero knowledge proof in a transaction, we would run into a problem: an attacker who sees the transaction could replace the decision, copy the proof, and front-run. To prevent this, we need to cryptographically tie the decision to the proof. Semaphore allows attaching an arbitrary signal to a proof to achieve this. All together, these claims are proven as follows (for the actual implementation, see here): What Have We Built So Far? We’ve done some early refactoring on the contracts to separate the identity tree from usage and nullifier implementation, which allows for even more generic use cases. We’ve also created semaphore-rs and ported most of the relevant parts of the client library zk-kit from Typescript to Rust. We are already using this library internally while building the Worldcoin wallet, which, in addition to Ethereum and Hubble, is also an identity wallet supporting local Semaphore proof generation. The wallet will be a native iOS and Android app and it uses a cross-compiled version of semaphore-rs under the hood. The wallet will be fully open sourced later in the year. What’s Next? We are currently working on scaling Semaphore. Improvements to scale Semaphore can be done on two sides: Identity insertion: Currently, every leaf is inserted individually into the Merkle tree and the updated root is calculated inside the contract. Since the Merkle proofs have to be efficiently verifiable inside a ZKP, the tree uses poseidon hashes instead of keccak. Unfortunately, this makes the insertion in Solidity very expensive (1-2M gas). A sequencer batching insertions together into a ZKP that aggregates multiple Merkle tree updates will drive down the cost of identity insertion significantly. Proof verification: Currently, each semaphore proof is submitted and verified individually, making the cost of signaling around 300k gas. Like the identity insertion, one can think of aggregating multiple proofs into a single proof to amortize the costs. Unfortunately, this is quite difficult with the proving system (Groth16) that is currently used by Semaphore. We are working on upgrading to a more modern proving system that also allows for aggregation. Why not just deploy it to Arbitrum or Optimism? Zero knowledge proofs still come with significant calldata and this cost is not going anywhere with L2s. Proof aggregation is the only way to reduce it to some sub-linear cost per verification. Let The Devs Do Something We hope that our efforts will make it as easy as possible for developers to use Proof-of-Personhood as a new primitive in their own contracts and apps. We’ll also soon release more developer tooling that will allow us to interact with the Worldcoin wallet and all users of Worldcoin. There are many exciting applications of Proof-of-Personhood beyond airdrops and we want to help build the infrastructure for them. If you’re interested in scaling Semaphore, working on L2s, or building developer tools: we’re hiring.","description":"What Are We Building? We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP) We originally set out with the goal of airdropping a token to a billion people Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side","wordcount":6071}</script><script referrerPolicy="no-referrer-when-downgrade" type="text/javascript" src="https://www.onelink-edge.com/moxie.min.js" data-oljs="PD63A-7AF4-BA5D-2219"></script><meta property="og:url" content="https://worldcoin.org/blog/developers/the-worldcoin-protocol"/><title>Privacy-Preserving Proof-of-Personhood Protocol</title><meta property="og:title" name="title" content="Privacy-Preserving Proof-of-Personhood Protocol"/><meta name="twitter:title" content="Privacy-Preserving Proof-of-Personhood Protocol"/><meta name="twitter:description" content="We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP). We originally set out with the goal of airdropping a token to a billion people. Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side."/><meta property="og:description" name="description" content="We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP). We originally set out with the goal of airdropping a token to a billion people. Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side."/><meta name="description" content="We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP). We originally set out with the goal of airdropping a token to a billion people. Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side."/><meta property="og:image" name="image" content="https://images.prismic.io/worldcoin-company-website/a612c903-6019-4299-b1a7-1e64e7c871f5_og_TWP.png?auto=compress,format"/><meta name="twitter:image" content="https://images.prismic.io/worldcoin-company-website/a612c903-6019-4299-b1a7-1e64e7c871f5_og_TWP.png?auto=compress,format"/><meta name="next-head-count" content="23"/><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-TJ6GVW6');</script><script src="https://cookie-cdn.cookiepro.com/scripttemplates/otSDKStub.js" type="text/javascript" charSet="UTF-8" data-domain-script="4508d921-4513-4b18-9093-124476c69c79" async=""></script><link rel="preload" href="/_next/static/css/70dd23e0efc500e3.css" as="style"/><link rel="stylesheet" href="/_next/static/css/70dd23e0efc500e3.css" data-n-g=""/><link rel="preload" href="/_next/static/css/ab30bec06c7fe6e6.css" as="style"/><link rel="stylesheet" href="/_next/static/css/ab30bec06c7fe6e6.css" data-n-p=""/><link rel="preload" href="/_next/static/css/41a46359a4448430.css" as="style"/><link rel="stylesheet" href="/_next/static/css/41a46359a4448430.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js"></script><script src="/_next/static/chunks/webpack-5dbaf00fa11412a2.js" defer=""></script><script src="/_next/static/chunks/framework-d0d2aea81547c455.js" defer=""></script><script src="/_next/static/chunks/main-00af47b3d5bc8078.js" defer=""></script><script src="/_next/static/chunks/pages/_app-412565350fa45918.js" defer=""></script><script src="/_next/static/chunks/b5f2ed29-3497125b27779ce9.js" defer=""></script><script src="/_next/static/chunks/e6848cf3-3680f5c6d5852765.js" defer=""></script><script src="/_next/static/chunks/ff39441c-83677ca70a897932.js" defer=""></script><script src="/_next/static/chunks/d848df63-fe627d5ee57c8fa0.js" defer=""></script><script src="/_next/static/chunks/176-3e6058945a69cbd3.js" defer=""></script><script src="/_next/static/chunks/261-ae0e2aa2459e8096.js" defer=""></script><script src="/_next/static/chunks/675-dfc3577d10554404.js" defer=""></script><script src="/_next/static/chunks/935-d6c35ce0ecd27f95.js" defer=""></script><script src="/_next/static/chunks/658-8518e0801ef0c72a.js" defer=""></script><script src="/_next/static/chunks/991-73db4e442a3615da.js" defer=""></script><script src="/_next/static/chunks/657-314665021f218e27.js" defer=""></script><script src="/_next/static/chunks/713-7224fc9bead66c76.js" defer=""></script><script src="/_next/static/chunks/pages/blog/%5Bcategory%5D/%5Barticle%5D-c6c8bfa2534e6ed6.js" defer=""></script><script src="/_next/static/tTYJH-3zRvJA5ckN3xkv5/_buildManifest.js" defer=""></script><script src="/_next/static/tTYJH-3zRvJA5ckN3xkv5/_ssgManifest.js" defer=""></script></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TJ6GVW6"
          height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="__next"><div class="grid grid-rows-1fr/auto min-h-screen"><div class="grid content-center pb-16 lg:pb-24 selection:text-ffffff selection:bg-4940e0"><div class="lg:pt-18 pb-8 lg:pb-0"><div class="grid lg:h-[68px] text-18 font-medium px-4 lg:px-[calc((100%-816px)/2)]"><div class="fixed z-10 inset-x-0 top-0"><div class="flex lg:hidden justify-between items-center h-16 px-3 bg-ffffff"><a class="flex items-center text-000000" href="/"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-[164px] h-6" role="img" aria-label="logo" style="--image:url(&quot;/icons/logo.svg&quot;)"></span></a><button class="w-8 h-8" type="button"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-7 h-full leading-none" role="img" aria-label="hamburger-default" style="--image:url(&quot;/icons/hamburger-default.svg&quot;)"></span></button></div></div><a class="hidden lg:flex self-center items-center text-000000" href="/"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-[164px] h-6" role="img" aria-label="logo" style="--image:url(&quot;/icons/logo.svg&quot;)"></span></a></div><div class="flex gap-y-12 flex-col justify-between px-4 pb-6 bg-white overflow-scroll fixed z-10 inset-y-0 left-full lg:hidden w-full transition-transform"><div class="flex justify-between items-center h-16"><a class="flex" href="/"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-[164px] h-6" role="img" aria-label="logo" style="--image:url(&quot;/icons/logo.svg&quot;)"></span></a><button class="w-8 h-8"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="hamburger-active" style="--image:url(&quot;/icons/hamburger-active.svg&quot;)"></span></button></div><ul class="grid gap-y-6"><li><a class="text-24 font-medium" href="/blog">Blog</a></li><li><a class="text-24 font-medium" href="/privacy">Privacy</a></li><li><a class="text-24 font-medium" href="/world-id">World ID</a></li><li><a class="text-24 font-medium" href="/download">Get the app</a></li><li><a class="text-24 font-medium" href="/be-a-worldcoin-operator">Be a Worldcoin Operator</a></li><li><a class="text-24 font-medium" href="/careers">Careers</a></li><li><a class="text-24 font-medium" href="/faqs">FAQs</a></li><li><a class="text-24 font-medium" href="/contact-us">Contact Us</a></li></ul><div class="grid gap-y-12"><div class="flex gap-x-8"><a href="https://twitter.com/worldcoin" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="twitter" style="--image:url(&quot;/icons/twitter.svg&quot;)"></span></a><a href="https://www.linkedin.com/company/worldcoinfoundation" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="linkedin" style="--image:url(&quot;/icons/linkedin.svg&quot;)"></span></a><a href="https://discord.gg/worldcoin" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="discord" style="--image:url(&quot;/icons/discord.svg&quot;)"></span></a><a href="https://t.me/worldcoin" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="telegram" style="--image:url(&quot;/icons/telegram.svg&quot;)"></span></a></div></div></div></div><div class="overflow-x-hidden details_details__FmyiD"><ol class="px-4 lg:px-[calc((100%-816px)/2)] min-w-0 text-000000 flex gap-1 text-8f949b"><li class="before:content-[&#x27;/&#x27;] first:before:content-none before:mr-1 before:opacity-50"><a class="opacity-50 hover:opacity-100 transition-opacity cursor-pointer" href="/blog">Blog</a></li><li class="before:content-[&#x27;/&#x27;] first:before:content-none before:mr-1 before:opacity-50 truncate max-w-[calc(1ch_*_(var(--chars)_+_2))] lg:max-w-none" style="--chars:10"><a class="opacity-50 hover:opacity-100 transition-opacity cursor-pointer" href="/blog/developers">Developers</a></li><li class="before:content-[&#x27;/&#x27;] first:before:content-none before:mr-1 before:opacity-50 truncate"><span class="opacity-50">Privacy-Preserving Proof-of-Personhood Protocol</span></li></ol><div class="px-3.5 lg:px-9 2xl:px-[calc((100%-1470px)/2)]"><div class="lg:grid lg:gap-y-6 items-start lg:px-[calc((100%-816px)/2)]"><div class="grid pt-16"><h1 class="grid gap-y-2" data-testid="article-header"><span class="leading-none text-32 lg:text-64 font-bold uppercase">Privacy-Preserving Proof-of-Personhood Protocol</span></h1></div></div></div><div class="px-3.5 lg:px-9 2xl:px-[calc((100%-1470px)/2)] mt-11 lg:grid lg:gap-y-6 items-start grid lg:grid-cols-[auto_676px] xl:grid-cols-[1fr_816px_1fr] lg:gap-x-6 xl:gap-x-8"><div class="text-14 lg:col-span-1"><div class="mt-4 lg:mt-0 flex gap-x-4 gap-y-2 lg:flex-col text-14 text-8f949b"><div>04/22/2022</div><div>4 Minute Read</div></div><div class="mt-12 lg:mt-4 grid gap-y-1 justify-items-start leading-6 text-14"><a href="#what-are-we-building" class="text-8f949b/70 hover:text-000000 transition-colors cursor-pointer leading-none">What Are We Building?</a><a href="#how-does-semaphore-work" class="text-8f949b/70 hover:text-000000 transition-colors cursor-pointer leading-none">How Does Semaphore Work?</a><a href="#what-have-we-built-so-far" class="text-8f949b/70 hover:text-000000 transition-colors cursor-pointer leading-none">What Have We Built So Far?</a><a href="#what-s-next" class="text-8f949b/70 hover:text-000000 transition-colors cursor-pointer leading-none">What’s Next?</a><a href="#let-the-devs-do-something" class="text-8f949b/70 hover:text-000000 transition-colors cursor-pointer leading-none">Let The Devs Do Something</a></div></div><div class="lg:col-start-2 grid lg:gap-x-5 gap-y-4 lg:grid-flow-col mb-2 justify-start justify-items-start items-start" id="what-are-we-building"><h2 class="mt-10 leading-none lg:leading-[1.1] text-28 lg:text-32 lg:mt-0 heading_heading__rrPt6">What Are We Building?</h2></div><div class="grid leading-6 lg:leading-7 text-18 lg:text-20 lg:col-start-2"><div class="mt-6 lg:mt-0 grid gap-y-6 lg:gap-y-8 content-start"><p>We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP). We originally set out with the goal of airdropping a token to a billion people. Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side.</p><p>While there are many projects out there building general purpose rollups (e.g., <a href="https://offchainlabs.com/" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">Arbitrum</a>, <a href="https://www.optimism.io/" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">Optimism</a>, <a href="https://zksync.io/" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">zksync</a>), we came across the open source project <a href="https://github.com/thehubbleproject/hubble-contracts" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">Hubble</a>, a minimal, application-specific rollup. It allows a highly efficient, but also permissionless and non-custodial airdrop at the scale of one billion people.</p><p>Hubble’s <a href="https://github.com/thehubbleproject/hubble-contracts" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">open source contracts</a> were already in great shape, and we decided to contribute a high-performance <a href="https://github.com/worldcoin/hubble-commander" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">sequencer implementation</a> written in Go, with the goal of deploying on mainnet as soon as possible. We managed to squeeze out quite some performance of the sequencer in the process. While there will be a separate deep dive on Hubble in the future, this post will focus on Semaphore, another open source project from the <a href="https://github.com/appliedzkp" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">appliedzkp team</a>.</p><p>Because the Orb uses biometrics for the initial sign-up, we wanted to delink this step from the wallet and any future transactions to ensure the user’s privacy. So we settled on <a href="https://github.com/appliedzkp/semaphore" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">Semaphore</a> because it not only allows us to add anonymity to a specific action, but also makes it very easy to reuse the setup for new applications, making future use cases possible.</p></div></div><div class="lg:col-start-2 grid lg:gap-x-5 gap-y-4 lg:grid-flow-col mb-2 justify-start justify-items-start items-start mt-2" id="how-does-semaphore-work"><h2 class="mt-10 leading-none lg:leading-[1.1] text-28 lg:text-32 lg:mt-10 heading_heading__rrPt6">How Does Semaphore Work?</h2></div><div class="grid leading-6 lg:leading-7 text-18 lg:text-20 lg:col-start-2"><div class="mt-6 lg:mt-0 grid gap-y-6 lg:gap-y-8 content-start"><p>The privacy in Semaphore is created by introducing a larger set of identities called “identity commitments,” which are hashes of a secret string, and comparable to a traditional public key. This set is represented as a Merkle tree in order to allow anyone in the set to efficiently prove membership. However, because this Merkle proof would leak an individual member’s identity, the proof needs to be verified in zero knowledge. This zero knowledge proof (ZKP) can then be transmitted to prove membership without leaking the identity, and be verified by anyone.</p><p>The application using Semaphore decides how the set of identities is created. The smart contract has to implement custom logic for the “gatekeeper” function to add an identity to the set. In the case of Worldcoin, the uniqueness check on the IrisHash is the gatekeeper. The IrisHash provided and signed by an Orb has to be unique, and only then is the identity added to the set.</p><p>Semaphore fundamentally has two main parts to it: a set of identities and a mechanism to prove membership. Users can create a zero knowledge proof that simultaneously proves three important claims:</p><ol class="-mt-2 grid list-disc gap-y-2 pl-5"><li><strong>Membership</strong> “I am a member of the set.”</li><li><strong>One-shot </strong>“I have not made a claim before in this context.”</li><li><strong>Signal</strong> “I want to say this ....”</li></ol><p><strong>Membership.</strong> The set of users is stored as a Merkle tree of public keys (identity commitments). To prove membership, a user proves they have a private key and a Merkle proof for public key in the tree. All of this, including the Merkle proof, is verified inside the zero-knowledge proof so no one can see which leaf was used or what the public key was. This is what provides perfect anonymity. An external observer sees only that the proof came from a member, without being able to see which member.</p><p><strong>One-shot.</strong> In nearly all applications, we want to make sure that each member gets to do something only once, (e.g., vote or spend a token). However, because membership is proven anonymously, we cannot tell if two proofs came from the same user. This is solved by having each proof publish a nullifier, which is a random number that is unique for each user. Thus, any proof from the same user will have the same nullifier, so we can detect them and know that they are coming from the same user. Nullifiers are similar to  random pseudonyms that cannot be linked to the real identity.</p><p>Nullifiers have been used since the first privacy coins. However, Semaphore goes beyond regular nullifiers. Take  voting as an example: say we want every user to cast one vote on each proposal. With regular nullifiers, we wouldn’t be able to track users&#x27; votes across proposals because they have the same nullifier. Instead, we need a new random pseudonym for each voting round. Semaphore makes this possible by mixing in an unique number for each round: the external nullifier. This is powerful as it allows us to build a set of all humans that everyone can build on.</p><p><strong>Signal.</strong> To continue the example of voting, each user needs  to be able to voice their decision. If we simply bundled their decision with a zero knowledge proof in a transaction, we would run into a problem: an attacker who sees the transaction could replace the decision, copy the proof, and front-run. To prevent this, we need to cryptographically tie the decision to the proof. Semaphore allows attaching an arbitrary signal to a proof to achieve this.</p><p>All together, these claims are proven as follows (for the actual implementation, see <a href="https://github.com/appliedzkp/semaphore/blob/main/circuits/semaphore.circom" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">here</a>):</p></div></div><div class="grid lg:grid-cols-[auto_676px] xl:grid-cols-[1fr_816px_1fr] lg:gap-x-6 xl:gap-x-8 col-span-full col-start-1 my-12 lg:my-0 grid gap-y-6 lg:gap-y-0"><div class="lg:col-start-2"><pre class="p-4 lg:p-8 text-14 whitespace-pre-wrap bg-f2f4f7"><span class="hljs-keyword">from</span> poseidon <span class="hljs-keyword">import</span> <span class="hljs-built_in">hash</span>, verify_merkle_proof

<span class="hljs-keyword">def</span> <span class="hljs-title function_">claim</span>(<span class="hljs-params">external_nullifier, root, signal</span>):

  <span class="hljs-comment"># Private inputs</span>
  private private_key, merkle_proof

  <span class="hljs-comment"># MEMBERSHIP: Verify that the public key is a member of the set using a Merkle proof</span>
  public_key = <span class="hljs-built_in">hash</span>(private_key)
  verify_merkle_proof(root, public_key)

  <span class="hljs-comment"># ONE-SHOT: Create a unique number ‘nullifier’ for this (member, context) pair</span>
  nullifier = <span class="hljs-built_in">hash</span>(private_key[<span class="hljs-number">0</span>], external_nullifier)

  <span class="hljs-comment"># SIGNAL: The value is not used, but it is tied to the proof</span>
  observe signal

  <span class="hljs-keyword">return</span> nullifier</pre></div><div class="lg:row-start-1 grid content-start gap-y-2.5 text-14 text-8390a3 lg:border-t lg:pt-2.5
  lg:m-0 leading-5 lg:col-span-1"><p><strong class="text-000000">Fig. 1</strong></p><p><strong class="text-000000">Pseudo-code for the Semaphore circuit implementation</strong></p><p>Note that instead of something complex like elliptic curve signatures, the public key is simply a hash. This works because zero knowledge proofs keep the pre-image secret.</p></div></div><div class="lg:col-start-2 grid lg:gap-x-5 gap-y-4 lg:grid-flow-col mb-2 justify-start justify-items-start items-start mt-2" id="what-have-we-built-so-far"><h2 class="mt-10 leading-none lg:leading-[1.1] text-28 lg:text-32 lg:mt-10 heading_heading__rrPt6">What Have We Built So Far?</h2></div><div class="grid leading-6 lg:leading-7 text-18 lg:text-20 lg:col-start-2"><div class="mt-6 lg:mt-0 grid gap-y-6 lg:gap-y-8 content-start"><p>We’ve done some early refactoring on the contracts to separate the identity tree from usage and nullifier implementation, which allows for even more generic use cases. We’ve also created <a href="https://github.com/worldcoin/semaphore-rs" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">semaphore-rs</a> and ported most of the relevant parts of the client library <a href="https://github.com/appliedzkp/zk-kit" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">zk-kit</a> from Typescript to Rust. We are already using this library internally while building the Worldcoin wallet, which, in addition to Ethereum and Hubble, is also an identity wallet supporting local Semaphore proof generation. The wallet will be a native iOS and Android app and it uses a cross-compiled version of semaphore-rs under the hood. The wallet will be fully open sourced later in the year.</p></div></div><div class="grid lg:grid-cols-[auto_676px] xl:grid-cols-[1fr_816px_1fr] lg:gap-x-6 xl:gap-x-8 col-span-full col-start-1 my-12 lg:my-0 grid gap-y-6 lg:gap-y-0"><div class="lg:col-start-2"><pre class="p-4 lg:p-8 text-14 whitespace-pre-wrap bg-f2f4f7"><span class="hljs-keyword">use</span> semaphore::{hash_to_field, Field, identity::Identity, hash::Hash, poseidon_tree::PoseidonTree, protocol::* };
<span class="hljs-keyword">use</span> num_bigint::BigInt;

# Generate identity
<span class="hljs-keyword">let</span> <span class="hljs-variable">id</span> = Identity::<span class="hljs-title function_ invoke__">from_seed</span>(b”secret”);

# Generate Merkle tree
<span class="hljs-keyword">let</span> <span class="hljs-variable">leaf</span> = Field::<span class="hljs-title function_ invoke__">from</span>(<span class="hljs-number">0</span>);
<span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">tree</span> = PoseidonTree::<span class="hljs-title function_ invoke__">new</span>(<span class="hljs-number">21</span>, leaf);
tree.<span class="hljs-title function_ invoke__">set</span>(<span class="hljs-number">0</span>, id.<span class="hljs-title function_ invoke__">commitment</span>());

<span class="hljs-keyword">let</span> <span class="hljs-variable">merkle_proof</span> = tre.<span class="hljs-title function_ invoke__">proof</span>(<span class="hljs-number">0</span>).<span class="hljs-title function_ invoke__">expect</span>(“proof should exist”);
<span class="hljs-keyword">let</span> <span class="hljs-variable">root</span> = tree.<span class="hljs-title function_ invoke__">root</span>();

# Change signal and external_nullifier
<span class="hljs-keyword">let</span> <span class="hljs-variable">signal_</span> hash = <span class="hljs-title function_ invoke__">hash_to_field</span>(b”xxx”);
<span class="hljs-keyword">let</span> <span class="hljs-variable">external_nullifier_hash</span> = <span class="hljs-title function_ invoke__">hash_to_field</span>(b”appId”);

<span class="hljs-keyword">let</span> <span class="hljs-variable">nullifier_hash</span> = <span class="hljs-title function_ invoke__">generate_nullifier_hash</span>(&amp;id, &amp;external_nullifier_hash);

<span class="hljs-keyword">let</span> <span class="hljs-variable">proof</span> = <span class="hljs-title function_ invoke__">generate_proof</span>(&amp;id, &amp;merkle_proof, &amp;external_nullifier_hash, signal_hash).<span class="hljs-title function_ invoke__">unwrap</span>();
<span class="hljs-keyword">let</span> <span class="hljs-variable">success</span> = <span class="hljs-title function_ invoke__">verify_proof</span>(root.<span class="hljs-title function_ invoke__">into</span>(), nullifier_hash, signal_hash, external_nullifier_hash, &amp;proof).<span class="hljs-title function_ invoke__">unwrap</span>();

<span class="hljs-built_in">assert!</span>(success);</pre></div><div class="lg:row-start-1 grid content-start gap-y-2.5 text-14 text-8390a3 lg:border-t lg:pt-2.5
  lg:m-0 leading-5 lg:col-span-1"><p><strong class="text-000000">Fig. 2</strong></p><p><strong class="text-000000">Example code to use semaphore-rs</strong></p></div></div><div class="lg:col-start-2 grid lg:gap-x-5 gap-y-4 lg:grid-flow-col mb-2 justify-start justify-items-start items-start mt-2" id="what-s-next"><h2 class="mt-10 leading-none lg:leading-[1.1] text-28 lg:text-32 lg:mt-10 heading_heading__rrPt6">What’s Next?</h2></div><div class="grid leading-6 lg:leading-7 text-18 lg:text-20 lg:col-start-2"><div class="mt-6 lg:mt-0 grid gap-y-6 lg:gap-y-8 content-start"><p>We are currently working on scaling Semaphore. Improvements to scale Semaphore can be done on two sides:</p><ol class="-mt-2 grid list-decimal gap-y-2 pl-5"><li><strong>Identity insertion:</strong> Currently, every leaf is <a href="https://github.com/appliedzkp/semaphore/blob/4e6be04729ed2d7e29461a3915877a66a2c9c4d2/contracts/base/SemaphoreGroups.sol#L43" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">inserted individually into the Merkle tree</a> and the updated root is calculated inside the contract. Since the Merkle proofs have to be efficiently verifiable inside a ZKP, the tree uses poseidon hashes instead of keccak. Unfortunately, this makes the insertion in Solidity very expensive (1-2M gas). A sequencer batching insertions together into a ZKP that <a href="https://github.com/worldcoin/zk-poseidon-tree-updater/blob/main/circuits/circuit.circom" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">aggregates multiple Merkle tree updates</a> will drive down the cost of identity insertion significantly.</li><li><strong>Proof verification:</strong> Currently, each semaphore proof is submitted and verified individually, making the cost of signaling around 300k gas. Like the identity insertion, one can think of aggregating multiple proofs into a single proof to amortize the costs. Unfortunately, this is quite difficult with the proving system (Groth16) that is currently used by Semaphore. We are working on upgrading to a more modern proving system that also allows for aggregation. </li></ol><p>Why not just deploy it to Arbitrum or Optimism? Zero knowledge proofs still come with significant calldata and this cost is not going anywhere with L2s. Proof aggregation is the only way to reduce it to some sub-linear cost per verification.</p></div></div><div class="lg:col-start-2 grid lg:gap-x-5 gap-y-4 lg:grid-flow-col mb-2 justify-start justify-items-start items-start mt-2" id="let-the-devs-do-something"><h2 class="mt-10 leading-none lg:leading-[1.1] text-28 lg:text-32 lg:mt-10 heading_heading__rrPt6">Let The Devs Do Something</h2></div><div class="grid leading-6 lg:leading-7 text-18 lg:text-20 lg:col-start-2"><div class="mt-6 lg:mt-0 grid gap-y-6 lg:gap-y-8 content-start"><p>We hope that our efforts will make it as easy as possible for developers to use Proof-of-Personhood as a new primitive in their own contracts and apps. We’ll also soon release more developer tooling that will allow us to interact with the Worldcoin wallet and all users of Worldcoin. There are many exciting applications of Proof-of-Personhood beyond airdrops and we want to help build the infrastructure for them.</p><p><strong>If you’re interested in scaling Semaphore, working on L2s, or building developer tools: <a href="https://worldcoin.org/careers" class="underline hover:opacity-50 transition-opacity cursor-pointer" target="_blank">we’re hiring</a>.</strong></p></div></div></div><div class="px-3.5 lg:px-9 2xl:px-[calc((100%-1470px)/2)] mt-12 lg:mt-16"><div class="grid lg:grid-cols-[auto_676px] xl:grid-cols-[1fr_816px_1fr] lg:gap-x-6 xl:gap-x-8 border-t text-14 gap-y-2.5 pt-2.5 pb-3.5 text-8c8c92"><div class="lg:col-span-1">Authors</div><div class="lg:col-start-2 max-w-lg break-words"><p>Remco Bloemen, Philipp Sippl</p></div></div><div class="grid lg:grid-cols-[auto_676px] xl:grid-cols-[1fr_816px_1fr] lg:gap-x-6 xl:gap-x-8 border-t text-14 gap-y-2.5 pt-2.5 pb-3.5 text-8c8c92"><div class="lg:col-span-1">Disclaimer</div><div class="lg:col-start-2 max-w-lg break-words"><p>This content is provided for informational purposes only and should not be relied on as legal, business, investment, or tax advice. The content speaks only as of the date indicated. Any projections, estimates, forecasts, targets and/or opinions expressed in these materials are subject to change without notice. Certain information contained in here may have been obtained from third-party sources. While taken from sources believed to be reliable, Worldcoin has not independently verified such information and makes no representations as to its accuracy.</p></div></div></div></div></div><div class="md:flex md:justify-center transition-bottom duration-300 ease-in bottom-0"><div class="overflow-hidden relative w-full lg:p-8 px-4 py-6 text-left align-middle text-ffffff bg-000000" data-testid="form-subscribe-window"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-[110px] h-4" role="img" aria-label="logo" style="--image:url(&quot;/icons/logo.svg&quot;)"></span><div class="mt-4 md:mt-1 lg:mt-4 md:flex md:justify-between md:items-end"><div><h3 class="lg:col-span-5 leading-none md:leading-none text-28 md:text-20 lg:text-28" data-testid="form-subscribe-header">Subscribe to the Worldcoin newsletter</h3><p class="mt-2 hidden md:block text-14 lg:text-16 text-ffffff/40" data-testid="form-subscribe-message">News, insights and updates delivered right to your inbox.</p></div><div class="w-full md:max-w-[313px] lg:max-w-[400px] xl:max-w-[534px]"><form class="mt-5 border-b focus-within:border-ffffff border-b-ffffff/30 py-2 transition-colors lg:col-span-7 relative grid gap-x-2.5 lg:gap-x-5 grid-cols-1fr/auto justify-start content-center"><input name="email" placeholder="email.address@gmail.com" class="text-18 placeholder:text-18 placeholder:text-ffffff/30 bg-transparent outline-none" type="email" data-testid="form-subscribe-input-email"/><button disabled="" class="group text-16 font-medium text-ffffff opacity-30 select-none pointer-events-none" type="submit" data-testid="form-subscribe-button-submit">Subscribe</button></form></div></div></div></div><footer class="px-4 lg:p-8 py-6 text-8390a3 bg-000000"><div class="grid grid-cols-1fr/auto md:grid-cols-none xl:grid-cols-1fr/auto gap-y-6 md:items-center"><nav><ul class="flex gap-4 md:gap-6 xl:gap-8 flex-col md:flex-row text-14 leading-5 lg:text-16 font-medium text-f2f4f7"><li><a class="hover:opacity-50 transition-opacity" href="/blog">Blog</a></li><li><a class="hover:opacity-50 transition-opacity" href="/privacy">Privacy</a></li><li><a class="hover:opacity-50 transition-opacity" href="/world-id">World ID</a></li><li><a class="hover:opacity-50 transition-opacity" href="/download">Get the app</a></li><li><a class="hover:opacity-50 transition-opacity" href="/be-a-worldcoin-operator">Be a Worldcoin Operator</a></li><li><a class="hover:opacity-50 transition-opacity" href="/careers">Careers</a></li><li><a class="hover:opacity-50 transition-opacity" href="/faqs">FAQs</a></li><li><a class="hover:opacity-50 transition-opacity" href="/contact-us">Contact Us</a></li></ul></nav><div class="flex gap-4 lg:gap-8 flex-col md:flex-row"><a href="https://twitter.com/worldcoin" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b hover:text-f2f4f7"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="twitter" style="--image:url(&quot;/icons/twitter.svg&quot;)"></span></a><a href="https://www.linkedin.com/company/worldcoinfoundation" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b hover:text-f2f4f7"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="linkedin" style="--image:url(&quot;/icons/linkedin.svg&quot;)"></span></a><a href="https://discord.gg/worldcoin" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b hover:text-f2f4f7"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="discord" style="--image:url(&quot;/icons/discord.svg&quot;)"></span></a><a href="https://t.me/worldcoin" target="_blank" class="flex w-5 h-5 lg:w-6 lg:h-6 transition-all text-8f949b hover:text-f2f4f7"><span class="icon_icon__p0l2U inline-block pointer-events-none bg-current w-full h-full" role="img" aria-label="telegram" style="--image:url(&quot;/icons/telegram.svg&quot;)"></span></a></div></div><hr class="mt-8 lg:mt-10 xl:mt-8 hidden md:block border-0 h-px bg-d9d9d9/10"/><div class="mt-8 md:mt-6 grid grid-cols-1fr/auto"><div class="col-span-2 lg:col-span-1 grid gap-y-4 md:gap-y-0 lg:max-w-[574px] xl:max-w-[705px] text-14 text-8c8c92 lg:block xl:grid"><span>Worldcoin tokens are not intended to be available to people or companies who are residents of, or are located, incorporated or have a registered agent in, the United States or other restricted territories.</span> <span>More details can be found in our <a class="relative before:transition-all before:duration-200 before:ease-out before:absolute before:bottom-0 before:h-px before:bg-current before:w-0 lg:hover:before:w-full hover:text-f2f4f7 whitespace-nowrap" target="_blank" href="https://worldcoin.pactsafe.io/rkuawsvk5.html#contract-qx3iz24-o">Terms of Use</a>.</span></div><div class="col-span-2 lg:col-span-1 mt-8 md:mt-6 lg:mt-0 flex gap-4 lg:gap-6.5 place-content-between md:place-content-start items-center leading-none text-14 text-8c8c92 lg:self-end"><span>© 2023 Worldcoin</span><div class="w-0.5 h-0.5 bg-8c8c92 rounded-full"></div><a class="relative before:transition-all before:duration-200 before:ease-out before:absolute before:bottom-0 before:h-px before:bg-current before:w-0 lg:hover:before:w-full hover:text-f2f4f7" target="_blank" href="https://worldcoin.pactsafe.io/rkuawsvk5.html#contract-9l-r7n2jt">Privacy</a><div class="w-0.5 h-0.5 bg-8c8c92 rounded-full"></div><a class="relative before:transition-all before:duration-200 before:ease-out before:absolute before:bottom-0 before:h-px before:bg-current before:w-0 lg:hover:before:w-full hover:text-f2f4f7 hover:text-f2f4f7" target="_blank" href="https://worldcoin.pactsafe.io/rkuawsvk5.html#contract-qx3iz24-o">Terms</a></div></div></footer></div><div class="Toastify"></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"cookies":{},"pathname":"/blog/[category]/[article]","query":{"category":"developers","article":"the-worldcoin-protocol"},"post":{"id":"YmGGAxIAACIA2uNz","uid":"the-worldcoin-protocol","url":null,"type":"blog","href":"https://worldcoin-company-website.cdn.prismic.io/api/v2/documents/search?ref=ZDlDEBYAADEA5qpr\u0026q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YmGGAxIAACIA2uNz%22%29+%5D%5D","tags":[],"first_publication_date":"2022-04-21T17:01:58+0000","last_publication_date":"2023-02-08T12:42:48+0000","slugs":["privacy-preserving-proof-of-personhood-protocol","the-worldcoin-protocol"],"linked_documents":[],"lang":"en-us","alternate_languages":[],"data":{"show_on_staging_only":null,"categories":[{"blog_category":{"id":"Y7bDkBEAACgA872F","type":"blog_category","tags":[],"lang":"en-us","slug":"developers","first_publication_date":"2023-01-05T12:33:24+0000","last_publication_date":"2023-01-27T09:38:47+0000","uid":"developers","link_type":"Document","isBroken":false}},{"blog_category":{"link_type":"Document"}}],"date":"2022-04-22","minutes_read":4,"meta_image":{"dimensions":{"width":2024,"height":1012},"alt":null,"copyright":null,"url":"https://images.prismic.io/worldcoin-company-website/a612c903-6019-4299-b1a7-1e64e7c871f5_og_TWP.png?auto=compress,format"},"hero":{},"hero_mobile":{},"has_dark_header":null,"hero_text_color":null,"header_background_color":null,"hero_content":[],"title":[{"type":"heading1","text":"Privacy-Preserving Proof-of-Personhood Protocol","spans":[]}],"subtitle":[],"description":[],"footnotes":[],"references":[],"acknowledgments":[],"authors":[{"type":"paragraph","text":"Remco Bloemen, Philipp Sippl","spans":[]}],"disclaimer":[{"type":"paragraph","text":"This content is provided for informational purposes only and should not be relied on as legal, business, investment, or tax advice. The content speaks only as of the date indicated. Any projections, estimates, forecasts, targets and/or opinions expressed in these materials are subject to change without notice. Certain information contained in here may have been obtained from third-party sources. While taken from sources believed to be reliable, Worldcoin has not independently verified such information and makes no representations as to its accuracy.","spans":[]}],"body":[{"primary":{"label":[],"heading":[{"type":"heading2","text":"What Are We Building?","spans":[]}],"id":"what-are-we-building"},"items":[{}],"id":"heading$61fdb7ef-9921-4b2b-8008-991fb86cb494","slice_type":"heading","slice_label":null},{"primary":{"content":[{"type":"paragraph","text":"We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP). We originally set out with the goal of airdropping a token to a billion people. Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side.","spans":[]},{"type":"paragraph","text":"While there are many projects out there building general purpose rollups (e.g., Arbitrum, Optimism, zksync), we came across the open source project Hubble, a minimal, application-specific rollup. It allows a highly efficient, but also permissionless and non-custodial airdrop at the scale of one billion people.","spans":[{"start":80,"end":88,"type":"hyperlink","data":{"link_type":"Web","url":"https://offchainlabs.com/","target":"_blank"}},{"start":90,"end":98,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.optimism.io/","target":"_blank"}},{"start":100,"end":106,"type":"hyperlink","data":{"link_type":"Web","url":"https://zksync.io/","target":"_blank"}},{"start":148,"end":154,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/thehubbleproject/hubble-contracts","target":"_blank"}}]},{"type":"paragraph","text":"Hubble’s open source contracts were already in great shape, and we decided to contribute a high-performance sequencer implementation written in Go, with the goal of deploying on mainnet as soon as possible. We managed to squeeze out quite some performance of the sequencer in the process. While there will be a separate deep dive on Hubble in the future, this post will focus on Semaphore, another open source project from the appliedzkp team.","spans":[{"start":9,"end":30,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/thehubbleproject/hubble-contracts","target":"_blank"}},{"start":108,"end":132,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/worldcoin/hubble-commander","target":"_blank"}},{"start":427,"end":442,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/appliedzkp","target":"_blank"}}]},{"type":"paragraph","text":"Because the Orb uses biometrics for the initial sign-up, we wanted to delink this step from the wallet and any future transactions to ensure the user’s privacy. So we settled on Semaphore because it not only allows us to add anonymity to a specific action, but also makes it very easy to reuse the setup for new applications, making future use cases possible.","spans":[{"start":178,"end":187,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/appliedzkp/semaphore","target":"_blank"}}]}],"aside_text":[],"aside_video":{"link_type":"Media"}},"items":[{}],"id":"content$0468e327-8153-437b-a33e-3011ec8b107e","slice_type":"content","slice_label":null},{"primary":{"label":[],"heading":[{"type":"heading2","text":"How Does Semaphore Work?","spans":[]}],"id":"how-does-semaphore-work"},"items":[{}],"id":"heading$f863e173-deff-4833-ac71-f88619c9695b","slice_type":"heading","slice_label":null},{"primary":{"content":[{"type":"paragraph","text":"The privacy in Semaphore is created by introducing a larger set of identities called “identity commitments,” which are hashes of a secret string, and comparable to a traditional public key. This set is represented as a Merkle tree in order to allow anyone in the set to efficiently prove membership. However, because this Merkle proof would leak an individual member’s identity, the proof needs to be verified in zero knowledge. This zero knowledge proof (ZKP) can then be transmitted to prove membership without leaking the identity, and be verified by anyone.","spans":[]},{"type":"paragraph","text":"The application using Semaphore decides how the set of identities is created. The smart contract has to implement custom logic for the “gatekeeper” function to add an identity to the set. In the case of Worldcoin, the uniqueness check on the IrisHash is the gatekeeper. The IrisHash provided and signed by an Orb has to be unique, and only then is the identity added to the set.","spans":[]},{"type":"paragraph","text":"Semaphore fundamentally has two main parts to it: a set of identities and a mechanism to prove membership. Users can create a zero knowledge proof that simultaneously proves three important claims:","spans":[]},{"type":"list-item","text":"Membership “I am a member of the set.”","spans":[{"start":0,"end":10,"type":"strong"}]},{"type":"list-item","text":"One-shot “I have not made a claim before in this context.”","spans":[{"start":0,"end":9,"type":"strong"}]},{"type":"list-item","text":"Signal “I want to say this ....”","spans":[{"start":0,"end":6,"type":"strong"}]},{"type":"paragraph","text":"Membership. The set of users is stored as a Merkle tree of public keys (identity commitments). To prove membership, a user proves they have a private key and a Merkle proof for public key in the tree. All of this, including the Merkle proof, is verified inside the zero-knowledge proof so no one can see which leaf was used or what the public key was. This is what provides perfect anonymity. An external observer sees only that the proof came from a member, without being able to see which member.","spans":[{"start":0,"end":11,"type":"strong"}]},{"type":"paragraph","text":"One-shot. In nearly all applications, we want to make sure that each member gets to do something only once, (e.g., vote or spend a token). However, because membership is proven anonymously, we cannot tell if two proofs came from the same user. This is solved by having each proof publish a nullifier, which is a random number that is unique for each user. Thus, any proof from the same user will have the same nullifier, so we can detect them and know that they are coming from the same user. Nullifiers are similar to  random pseudonyms that cannot be linked to the real identity.","spans":[{"start":0,"end":9,"type":"strong"}]},{"type":"paragraph","text":"Nullifiers have been used since the first privacy coins. However, Semaphore goes beyond regular nullifiers. Take  voting as an example: say we want every user to cast one vote on each proposal. With regular nullifiers, we wouldn’t be able to track users' votes across proposals because they have the same nullifier. Instead, we need a new random pseudonym for each voting round. Semaphore makes this possible by mixing in an unique number for each round: the external nullifier. This is powerful as it allows us to build a set of all humans that everyone can build on.","spans":[]},{"type":"paragraph","text":"Signal. To continue the example of voting, each user needs  to be able to voice their decision. If we simply bundled their decision with a zero knowledge proof in a transaction, we would run into a problem: an attacker who sees the transaction could replace the decision, copy the proof, and front-run. To prevent this, we need to cryptographically tie the decision to the proof. Semaphore allows attaching an arbitrary signal to a proof to achieve this.","spans":[{"start":0,"end":7,"type":"strong"}]},{"type":"paragraph","text":"All together, these claims are proven as follows (for the actual implementation, see here):","spans":[{"start":85,"end":89,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/appliedzkp/semaphore/blob/main/circuits/semaphore.circom","target":"_blank"}}]}],"aside_text":[],"aside_video":{"link_type":"Media"}},"items":[{}],"id":"content$8863dbcc-28c9-4dce-81e2-191a66c424c9","slice_type":"content","slice_label":null},{"primary":{"code_description":[{"type":"paragraph","text":"Fig. 1","spans":[{"start":0,"end":6,"type":"strong"}]},{"type":"paragraph","text":"Pseudo-code for the Semaphore circuit implementation","spans":[{"start":0,"end":52,"type":"strong"}]},{"type":"paragraph","text":"Note that instead of something complex like elliptic curve signatures, the public key is simply a hash. This works because zero knowledge proofs keep the pre-image secret.","spans":[]}],"code":[{"type":"preformatted","text":"from poseidon import hash, verify_merkle_proof\n\ndef claim(external_nullifier, root, signal):\n\n  # Private inputs\n  private private_key, merkle_proof\n\n  # MEMBERSHIP: Verify that the public key is a member of the set using a Merkle proof\n  public_key = hash(private_key)\n  verify_merkle_proof(root, public_key)\n\n  # ONE-SHOT: Create a unique number ‘nullifier’ for this (member, context) pair\n  nullifier = hash(private_key[0], external_nullifier)\n\n  # SIGNAL: The value is not used, but it is tied to the proof\n  observe signal\n\n  return nullifier","spans":[]}],"language":"python"},"items":[{}],"id":"code$f4b31b99-c4d5-43fd-bbed-12b23d524b6f","slice_type":"code","slice_label":null},{"primary":{"label":[],"heading":[{"type":"heading2","text":"What Have We Built So Far?","spans":[]}],"id":"what-have-we-built-so-far"},"items":[{}],"id":"heading$28e602be-0254-4dcc-bc91-0c8a2104ae84","slice_type":"heading","slice_label":null},{"primary":{"content":[{"type":"paragraph","text":"We’ve done some early refactoring on the contracts to separate the identity tree from usage and nullifier implementation, which allows for even more generic use cases. We’ve also created semaphore-rs and ported most of the relevant parts of the client library zk-kit from Typescript to Rust. We are already using this library internally while building the Worldcoin wallet, which, in addition to Ethereum and Hubble, is also an identity wallet supporting local Semaphore proof generation. The wallet will be a native iOS and Android app and it uses a cross-compiled version of semaphore-rs under the hood. The wallet will be fully open sourced later in the year.","spans":[{"start":187,"end":199,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/worldcoin/semaphore-rs","target":"_blank"}},{"start":260,"end":266,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/appliedzkp/zk-kit","target":"_blank"}}]}],"aside_text":[],"aside_video":{"link_type":"Media"}},"items":[{}],"id":"content$caf8b6c0-f8ad-4885-92eb-944286c03785","slice_type":"content","slice_label":null},{"primary":{"code_description":[{"type":"paragraph","text":"Fig. 2","spans":[{"start":0,"end":6,"type":"strong"}]},{"type":"paragraph","text":"Example code to use semaphore-rs","spans":[{"start":0,"end":32,"type":"strong"}]}],"code":[{"type":"preformatted","text":"use semaphore::{hash_to_field, Field, identity::Identity, hash::Hash, poseidon_tree::PoseidonTree, protocol::* };\nuse num_bigint::BigInt;\n\n# Generate identity\nlet id = Identity::from_seed(b”secret”);\n\n# Generate Merkle tree\nlet leaf = Field::from(0);\nlet mut tree = PoseidonTree::new(21, leaf);\ntree.set(0, id.commitment());\n\nlet merkle_proof = tre.proof(0).expect(“proof should exist”);\nlet root = tree.root();\n\n# Change signal and external_nullifier\nlet signal_ hash = hash_to_field(b”xxx”);\nlet external_nullifier_hash = hash_to_field(b”appId”);\n\nlet nullifier_hash = generate_nullifier_hash(\u0026id, \u0026external_nullifier_hash);\n\nlet proof = generate_proof(\u0026id, \u0026merkle_proof, \u0026external_nullifier_hash, signal_hash).unwrap();\nlet success = verify_proof(root.into(), nullifier_hash, signal_hash, external_nullifier_hash, \u0026proof).unwrap();\n\nassert!(success);","spans":[]}],"language":"rust"},"items":[{}],"id":"code$f9e1959e-46a4-4d6d-90d2-88978108eeb9","slice_type":"code","slice_label":null},{"primary":{"label":[],"heading":[{"type":"heading2","text":"What’s Next?","spans":[]}],"id":"what’s-next"},"items":[{}],"id":"heading$ee7860b6-fd25-44a5-b11e-010879848f6b","slice_type":"heading","slice_label":null},{"primary":{"content":[{"type":"paragraph","text":"We are currently working on scaling Semaphore. Improvements to scale Semaphore can be done on two sides:","spans":[]},{"type":"o-list-item","text":"Identity insertion: Currently, every leaf is inserted individually into the Merkle tree and the updated root is calculated inside the contract. Since the Merkle proofs have to be efficiently verifiable inside a ZKP, the tree uses poseidon hashes instead of keccak. Unfortunately, this makes the insertion in Solidity very expensive (1-2M gas). A sequencer batching insertions together into a ZKP that aggregates multiple Merkle tree updates will drive down the cost of identity insertion significantly.","spans":[{"start":0,"end":19,"type":"strong"},{"start":45,"end":87,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/appliedzkp/semaphore/blob/4e6be04729ed2d7e29461a3915877a66a2c9c4d2/contracts/base/SemaphoreGroups.sol#L43","target":"_blank"}},{"start":401,"end":440,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/worldcoin/zk-poseidon-tree-updater/blob/main/circuits/circuit.circom","target":"_blank"}}]},{"type":"o-list-item","text":"Proof verification: Currently, each semaphore proof is submitted and verified individually, making the cost of signaling around 300k gas. Like the identity insertion, one can think of aggregating multiple proofs into a single proof to amortize the costs. Unfortunately, this is quite difficult with the proving system (Groth16) that is currently used by Semaphore. We are working on upgrading to a more modern proving system that also allows for aggregation. ","spans":[{"start":0,"end":19,"type":"strong"}]},{"type":"paragraph","text":"Why not just deploy it to Arbitrum or Optimism? Zero knowledge proofs still come with significant calldata and this cost is not going anywhere with L2s. Proof aggregation is the only way to reduce it to some sub-linear cost per verification.","spans":[]}],"aside_text":[],"aside_video":{"link_type":"Media"}},"items":[{}],"id":"content$7abb2085-69bf-4ac7-93f8-59484e8cef7d","slice_type":"content","slice_label":null},{"primary":{"label":[],"heading":[{"type":"heading2","text":"Let The Devs Do Something","spans":[]}],"id":"let-the-devs-do-something"},"items":[{}],"id":"heading$69b8f382-8977-42f2-83c0-1e7eb426a6fd","slice_type":"heading","slice_label":null},{"primary":{"content":[{"type":"paragraph","text":"We hope that our efforts will make it as easy as possible for developers to use Proof-of-Personhood as a new primitive in their own contracts and apps. We’ll also soon release more developer tooling that will allow us to interact with the Worldcoin wallet and all users of Worldcoin. There are many exciting applications of Proof-of-Personhood beyond airdrops and we want to help build the infrastructure for them.","spans":[]},{"type":"paragraph","text":"If you’re interested in scaling Semaphore, working on L2s, or building developer tools: we’re hiring.","spans":[{"start":0,"end":101,"type":"strong"},{"start":88,"end":100,"type":"hyperlink","data":{"link_type":"Web","url":"https://worldcoin.org/careers","target":"_blank"}}]}],"aside_text":[],"aside_video":{"link_type":"Media"}},"items":[{}],"id":"content$2423e660-0751-43c3-a081-b900579980a5","slice_type":"content","slice_label":null}]}},"source":"prismic","category":{"id":"Y7bDkBEAACgA872F","uid":"developers","url":null,"type":"blog_category","href":"https://worldcoin-company-website.cdn.prismic.io/api/v2/documents/search?ref=ZDlDEBYAADEA5qpr\u0026q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22Y7bDkBEAACgA872F%22%29+%5D%5D","tags":[],"first_publication_date":"2023-01-05T12:33:24+0000","last_publication_date":"2023-01-27T09:38:47+0000","slugs":["developers","developer-blog"],"linked_documents":[],"lang":"en-us","alternate_languages":[],"data":{"title":"Developers","order":3}},"_nextI18Next":{"initialI18nStore":{"en":{"common":{"About":"About","About the Company":"About the Company","Acknowledgments":"Acknowledgments","Add another email":"Add another email","All":"All","All Articles":"All Articles","All Departments":"All Departments","All Locations":"All Locations","All rights reserved":"All rights reserved.","Apply Now":"Apply Now","Apply to be a founding Worldcoin Orb Operator":"Apply to be a founding Worldcoin Orb Operator","Apply! Tell us about your ambitious plans to bring Worldcoin to your region":"Apply! Tell us about your ambitious plans to bring Worldcoin to your region, and why you can execute them. Wherever you are in the world, if you’re a leader who is hungry, smart, and persistent, we want to hear from you.","Authors":"Authors","Back to All Jobs":"Back to All Jobs","Back to home":"Back to home","Back to top":"Back to top","Be the first to know when you can claim your free share":"Be the first to know when you can claim your free share and stay up to date with all things Worldcoin.","Become a Worldcoin business partner":"Become a Worldcoin business partner","Become an Orb Operator":"Become an Orb Operator","Blog":"Blog","Building the worlds largest identity":"Building the world's largest identity and financial public utility, giving ownership to everyone.","Careers":"Careers","Category":"Category","City or region in which you operate":"City or region in which you operate","City/Region":"City/Region","Code of Conduct":"Code of Conduct","Community":"Community","Contact Us":"Contact Us","Country":"Country","Country in which you operate":"Country in which you operate","Deep dive into all things Worldcoin":"Deep dive into all things Worldcoin","Designing for Privacy":"Designing for Privacy","Developers":"Developers","Disclaimer":"Disclaimer","Download the World App":"Download the World App","Download the app":"Download the app","E-Verify Program":"E-Verify Program","Earn Worldcoin by giving it away":"Earn Worldcoin by giving it away","Earn your share of Worldcoin by giving it away":"Earn your share of Worldcoin by giving it away","Email address":"Email address","FAQs":"FAQs","Featured Roles":"Featured Roles","First Name":"First Name","Footnotes":"Footnotes","General Inquiries":"General Inquiries","Get Email Updates":"Get Email Updates","Get Notified":"Get Notified","Get the app":"Get the app","Go back to blog":"Go back to blog","Help us give Worldcoin to over a billion people. Get rewarded for every user you sign up":"Help us give Worldcoin to over a billion people. Get rewarded for every user you sign up.","Home":"Home","How can you do it?":"How can you do it?","How can you start?":"How can you start?","How the Launch Works":"How the Launch Works","Introducing Worldcoin":"Introducing Worldcoin","Invalid email address":"Invalid email address","Investors":"Investors","Join us":"Join us","Last Name":"Last Name","Last modified":"Last modified","Launch":"Launch","Launching a new global currency by giving a free share of it to every person on Earth":"Launching a new global currency by giving a free share of it to every person on Earth is an enormous challenge. But we’ve found a way to make it work.","Lead a new movement in your country":"Lead a new movement in your country.","Learn":"Learn","Learn More":"Learn More","Let’s go home":"Let’s go home","Location":"Location","Minute Read":"{{count}} Minute Read","More details can be found in our Terms of Use":"\u003c1\u003eMore details can be found in our \u003c2\u003eTerms of Use\u003c/2\u003e.\u003c/1\u003e","News, insights and updates delivered right to your inbox.":"News, insights and updates delivered right to your inbox.","Nicely done":"Nicely done!","No featured positions":"No featured positions","No jobs found":"No jobs found","Not Found":"Not Found","Once you receive your Orb, you will begin giving Worldcoin away to your community":"Once you receive your Orb, you will begin giving Worldcoin away to your community. If your operations are successful, you may be given additional Orbs to further scale your business.","Open Positions":"Open Positions","Open Sourcing Worldcoin":"Open Sourcing Worldcoin","Orb Operator in":"Orb Operator in","Orb Operators":"Orb Operators","Orb-verified World ID Holders":"Orb-verified World ID Holders","Our Investors":"Our Investors","Phone number":"Phone number","Please see our careers page for a full list of available roles":"Please see our careers page for a full list of available roles","Press":"Press","Press Inquiries":"Press Inquiries","Privacy":"Privacy","Privacy Statement":"Privacy Statement","Privacy by Design":"Privacy by Design","Purchase Order":"Purchase Order","Read More":"Read More","References":"References","Replay":"Replay","See more":"See more","See open positions":"See open positions","Select Department":"Select Department","Select Location":"Select Location","Some error occurred, try again later":"Some error occurred, try again later!","Something went wrong":"Something went wrong","Start your application":"Start your application","Start your application now":"Start your application now","Submit":"Submit","Subscribe":"Subscribe","Subscribe to the Worldcoin newsletter":"Subscribe to the Worldcoin newsletter","Team":"Team","Tech Blog":"Tech Blog","Terms":"Terms","Terms and Conditions":"Terms and Conditions","Terms of Use":"Terms of Use","Thanks for subscribing to email updates.":"Thanks for subscribing to email updates.","The Worldcoin Blog":"The Worldcoin Blog","The Worldcoin Foundation":"The Worldcoin Foundation","The Worldcoin Foundation is the protocol":"\u003c1\u003e\u003c2\u003eThe Worldcoin Foundation\u003c/2\u003e is the Worldcoin protocol’s steward, supporting and growing the Worldcoin community to become fully decentralized and self-sufficient.\u003c/1\u003e","The first app that enables payment, purchases and transfers using Worldcoin, digital assets, and traditional currencies.":"The first app that enables payment, purchases and transfers using Worldcoin, digital assets, and traditional currencies.","There’s nothing here right now":"There’s nothing here right now.","This email cannot be subscribed":"This email cannot be subscribed","Tools for Humanity":"Tools for Humanity","Tools for Humanity is a global hardware and software development company":"\u003c1\u003e\u003c2\u003eTools for Humanity\u003c/2\u003e is a global hardware and software development company built to ensure a more just and accessible economic system. It is currently building tools and helping to support the Worldcoin project in addition to operating the World App.\u003c/1\u003e","Total personhood credential holders":"Total personhood credential holders","Type":"Type","Unique personhood verifications":"Unique personhood verifications","View Job":"View Job","We are always on the lookout for new talent":"We are always on the lookout for new talent","We use biometric identification to ensure a fair launch":"We use biometric identification to ensure a fair launch","We use modern cryptography":"We use modern cryptography","Website/Linkedin":"Website/Linkedin","We’ll be in touch":"We’ll be in touch.","We’re looking for founding Worldcoin Orb Operators from all over the world":"We’re looking for founding Worldcoin Orb Operators from all over the world.","What experience or existing infrastructure can you leverage to become a successful Orb operator?":"What experience or existing infrastructure can you leverage to become a successful Orb operator?","What to read next":"What to read next","What will you do?":"What will you do?","Who are you?":"Who are you?","Worldcoin":"Worldcoin","Worldcoin Home":"Worldcoin Home","Worldcoin Supplier":"Worldcoin Supplier","Worldcoin is a new, collectively owned global currency":"Worldcoin is a new, collectively owned global currency that will be distributed fairly to as many people as possible. Worldcoin will launch by giving a free share to everyone on Earth. We believe that this is an essential step to accelerate the transition towards a more inclusive global economy, providing new ways for everyone to share future prosperity. We hope you’ll join us on our ambitious journey.","Worldcoin is also committed to working with and providing reasonable accommodations":"Worldcoin is also committed to working with and providing reasonable accommodations to individuals with disabilities. Please let your recruiter know if you need an accommodation at any point during the interview process.","Worldcoin is an Equal Opportunity":"Worldcoin is an Equal Opportunity / Affirmative Action employer committed to diversity in the workplace. All qualified applicants will receive consideration for employment without regard to race, color, religion, sex, sexual orientation, age, national origin, disability, protected veteran status, gender identity or any other factor protected by applicable federal, state or local laws. Worldcoin is also committed to working with and providing reasonable accommodations to individuals with disabilities. Please let your recruiter know if you need an accommodation at any point during the interview process.","Worldcoin is building the world’s largest identity and financial network":"\u003c1\u003eWorldcoin is building the world’s largest identity and financial network. Currently in beta, the protocol will ultimately serve as a public utility, owned by everyone. It is built on three fundamental products - a privacy-preserving identity system, a token offering utility and future governance; and an app that enables payment and transfers of both digital and traditional currencies. Contributors to the Worldcoin ecosystem are united by their commitment to providing universal access to the global economy to every person on the planet, regardless of country or background.\u003c/1\u003e","Worldcoin participates in the":"Worldcoin participates in the","Write at least 200 characters":"Write at least 200 characters","You will run your operations from the ground up like a business—your business":"You will run your operations from the ground up like a business—your business. You understand what Worldcoin means to your community and know how to distribute Worldcoin effectively. You will be rewarded for every user you sign up with your Orb.","You've successfully subscribed to email updates":"You've successfully subscribed to email updates!","Your application was successfully submitted":"Your application was successfully submitted","You’re entrepreneurial, driven, and inspired by the opportunities":"You’re entrepreneurial, driven, and inspired by the opportunities that Worldcoin will create for you and your community.","You’re signed up to receive updates":"You’re signed up to receive updates","You’re signed up to receive updates.":"You’re signed up to receive updates.","by submitting this application":"\u003c1\u003eBy submitting this application I represent that I am at least 18 years of age and \u003c4/\u003eI agree to the \u003c2\u003eUser Terms\u003c/2\u003e, and the \u003c3\u003ePrivacy Statement\u003c/3\u003e.\u003c/1\u003e","individuals":"individuals","last week":"last week","open positions":"\u003c1\u003eIf you’re interested in working on one of the many parts of the system, have a look at \u003c2\u003eour open positions\u003c/2\u003e or just message us directly on any channel.\u003c/1\u003e"}}},"initialLocale":"en","userConfig":{"i18n":{"defaultLocale":"en","localePath":"/vercel/path0/public/locales","locales":["en"]},"default":{"i18n":{"defaultLocale":"en","localePath":"/vercel/path0/public/locales","locales":["en"]}}}},"jsonLD":{"@context":"http://schema.org","@type":"BlogPosting","name":"Privacy-Preserving Proof-of-Personhood Protocol","headline":"Privacy-Preserving Proof-of-Personhood Protocol","image":"https://images.prismic.io/worldcoin-company-website/a612c903-6019-4299-b1a7-1e64e7c871f5_og_TWP.png?auto=compress,format","publisher":{"@type":"Organization","name":"Worldcoin","sameAs":"https://worldcoin.org","logo":{"@type":"ImageObject","url":"https://worldcoin.org/icons/logo.svg"}},"author":{"@type":"Person","name":"Remco Bloemen, Philipp Sippl"},"url":"https://worldcoin.org/the-worldcoin-protocol","mainEntityOfPage":{"@type":"WebPage","@id":"https://worldcoin.org/the-worldcoin-protocol"},"datePublished":"2022-04-21","dateCreated":"2022-04-21","dateModified":"2023-02-08","articleBody":"What Are We Building? We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP). We originally set out with the goal of airdropping a token to a billion people. Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side. While there are many projects out there building general purpose rollups (e.g., Arbitrum, Optimism, zksync), we came across the open source project Hubble, a minimal, application-specific rollup. It allows a highly efficient, but also permissionless and non-custodial airdrop at the scale of one billion people. Hubble’s open source contracts were already in great shape, and we decided to contribute a high-performance sequencer implementation written in Go, with the goal of deploying on mainnet as soon as possible. We managed to squeeze out quite some performance of the sequencer in the process. While there will be a separate deep dive on Hubble in the future, this post will focus on Semaphore, another open source project from the appliedzkp team. Because the Orb uses biometrics for the initial sign-up, we wanted to delink this step from the wallet and any future transactions to ensure the user’s privacy. So we settled on Semaphore because it not only allows us to add anonymity to a specific action, but also makes it very easy to reuse the setup for new applications, making future use cases possible. How Does Semaphore Work? The privacy in Semaphore is created by introducing a larger set of identities called “identity commitments,” which are hashes of a secret string, and comparable to a traditional public key. This set is represented as a Merkle tree in order to allow anyone in the set to efficiently prove membership. However, because this Merkle proof would leak an individual member’s identity, the proof needs to be verified in zero knowledge. This zero knowledge proof (ZKP) can then be transmitted to prove membership without leaking the identity, and be verified by anyone. The application using Semaphore decides how the set of identities is created. The smart contract has to implement custom logic for the “gatekeeper” function to add an identity to the set. In the case of Worldcoin, the uniqueness check on the IrisHash is the gatekeeper. The IrisHash provided and signed by an Orb has to be unique, and only then is the identity added to the set. Semaphore fundamentally has two main parts to it: a set of identities and a mechanism to prove membership. Users can create a zero knowledge proof that simultaneously proves three important claims: Membership “I am a member of the set.” One-shot “I have not made a claim before in this context.” Signal “I want to say this ....” Membership. The set of users is stored as a Merkle tree of public keys (identity commitments). To prove membership, a user proves they have a private key and a Merkle proof for public key in the tree. All of this, including the Merkle proof, is verified inside the zero-knowledge proof so no one can see which leaf was used or what the public key was. This is what provides perfect anonymity. An external observer sees only that the proof came from a member, without being able to see which member. One-shot. In nearly all applications, we want to make sure that each member gets to do something only once, (e.g., vote or spend a token). However, because membership is proven anonymously, we cannot tell if two proofs came from the same user. This is solved by having each proof publish a nullifier, which is a random number that is unique for each user. Thus, any proof from the same user will have the same nullifier, so we can detect them and know that they are coming from the same user. Nullifiers are similar to random pseudonyms that cannot be linked to the real identity. Nullifiers have been used since the first privacy coins. However, Semaphore goes beyond regular nullifiers. Take voting as an example: say we want every user to cast one vote on each proposal. With regular nullifiers, we wouldn’t be able to track users' votes across proposals because they have the same nullifier. Instead, we need a new random pseudonym for each voting round. Semaphore makes this possible by mixing in an unique number for each round: the external nullifier. This is powerful as it allows us to build a set of all humans that everyone can build on. Signal. To continue the example of voting, each user needs to be able to voice their decision. If we simply bundled their decision with a zero knowledge proof in a transaction, we would run into a problem: an attacker who sees the transaction could replace the decision, copy the proof, and front-run. To prevent this, we need to cryptographically tie the decision to the proof. Semaphore allows attaching an arbitrary signal to a proof to achieve this. All together, these claims are proven as follows (for the actual implementation, see here): What Have We Built So Far? We’ve done some early refactoring on the contracts to separate the identity tree from usage and nullifier implementation, which allows for even more generic use cases. We’ve also created semaphore-rs and ported most of the relevant parts of the client library zk-kit from Typescript to Rust. We are already using this library internally while building the Worldcoin wallet, which, in addition to Ethereum and Hubble, is also an identity wallet supporting local Semaphore proof generation. The wallet will be a native iOS and Android app and it uses a cross-compiled version of semaphore-rs under the hood. The wallet will be fully open sourced later in the year. What’s Next? We are currently working on scaling Semaphore. Improvements to scale Semaphore can be done on two sides: Identity insertion: Currently, every leaf is inserted individually into the Merkle tree and the updated root is calculated inside the contract. Since the Merkle proofs have to be efficiently verifiable inside a ZKP, the tree uses poseidon hashes instead of keccak. Unfortunately, this makes the insertion in Solidity very expensive (1-2M gas). A sequencer batching insertions together into a ZKP that aggregates multiple Merkle tree updates will drive down the cost of identity insertion significantly. Proof verification: Currently, each semaphore proof is submitted and verified individually, making the cost of signaling around 300k gas. Like the identity insertion, one can think of aggregating multiple proofs into a single proof to amortize the costs. Unfortunately, this is quite difficult with the proving system (Groth16) that is currently used by Semaphore. We are working on upgrading to a more modern proving system that also allows for aggregation. Why not just deploy it to Arbitrum or Optimism? Zero knowledge proofs still come with significant calldata and this cost is not going anywhere with L2s. Proof aggregation is the only way to reduce it to some sub-linear cost per verification. Let The Devs Do Something We hope that our efforts will make it as easy as possible for developers to use Proof-of-Personhood as a new primitive in their own contracts and apps. We’ll also soon release more developer tooling that will allow us to interact with the Worldcoin wallet and all users of Worldcoin. There are many exciting applications of Proof-of-Personhood beyond airdrops and we want to help build the infrastructure for them. If you’re interested in scaling Semaphore, working on L2s, or building developer tools: we’re hiring.","description":"What Are We Building? We are building what we call a Privacy-Preserving Proof-of-Personhood Protocol (PPPoPP) We originally set out with the goal of airdropping a token to a billion people Along the way, we found that we had to develop a lot of foundational infrastructure not only on the hardware side (which became the Orb), but also on the crypto/protocol side","wordcount":6071}},"__N_SSG":true},"page":"/blog/[category]/[article]","query":{"category":"developers","article":"the-worldcoin-protocol"},"buildId":"tTYJH-3zRvJA5ckN3xkv5","runtimeConfig":{"ACCEPT_IMAGES_MIME_TYPES":"image/gif, image/jpeg, image/pjpeg, image/png, image/svg+xml, image/tiff,\n      image/vnd.microsoft.icon, image/vnd.wap.wbmp, image/webp","ITEMS_PER_PAGE":25,"US_DATE_FORMAT":"MM/DD/YYYY","NEXT_PUBLIC_BETA_ANDROID_URL":"https://play.google.com/store/apps/details?id=com.worldcoin","NEXT_PUBLIC_GREENHOUSE_BOARD_URL":"https://boards.greenhouse.io/worldcoinorg","NEXT_PUBLIC_ANDROID_APP_URL":"https://play.google.com/store/apps/details?id=com.worldcoin","NEXT_PUBLIC_VIDEO_AUTOPLAY_OFFSET":"200","NEXT_PUBLIC_VERCEL_GIT_COMMIT_AUTHOR_NAME":"Pavel Romancev","NEXT_PUBLIC_CONSUMER_GRAPHQL_API_URL":"https://api.consumer.worldcoin.org/v1/graphql","NEXT_PUBLIC_VERCEL_GIT_REPO_SLUG":"company-website","NEXT_PUBLIC_VERIFICATIONS_STATS":"https://analytics.id.worldcoin.org/api/v1/verifications","NEXT_PUBLIC_PRIVACY_STATEMENT_URL":"https://worldcoin.pactsafe.io/rkuawsvk5.html#contract-9l-r7n2jt","NEXT_PUBLIC_PACTSAFE_ACCESS_ID":"5efd1c14-0ea8-421c-a873-44e7161581fe","NEXT_PUBLIC_WORLD_ID_APP_ID":"app_522831f62aad8c7ecc4d0df046124a28","NEXT_PUBLIC_VERCEL_ENV":"production","NEXT_PUBLIC_VERCEL_GIT_COMMIT_MESSAGE":"Merge pull request #945 from worldcoin/grants-page\n\nGrants page","NEXT_PUBLIC_DOWNLOAD_APP_URL":"https://getworldcoin.com/app","NEXT_PUBLIC_VERCEL_GIT_PROVIDER":"github","NEXT_PUBLIC_PACTSAFE_USER_AGREEMENT_KEY":"contract-qx3iz24-o","NEXT_PUBLIC_VERCEL_GIT_REPO_ID":"397531593","NEXT_PUBLIC_ONE_LINK_JS_SNIPPET":"PD63A-7AF4-BA5D-2219","NEXT_PUBLIC_OPERATOR_GRAPHQL_API_URL":"https://api.operator.worldcoin.org/v1/graphql","NEXT_PUBLIC_APP_URL":"https://worldcoin.org","NEXT_PUBLIC_PRISMIC_API_URL":"https://worldcoin-company-website.prismic.io/api/v2","NEXT_PUBLIC_USER_AGREEMENT_URL":"https://worldcoin.pactsafe.io/rkuawsvk5.html#contract-qx3iz24-o","NEXT_PUBLIC_OPERATOR_APPLICATION_URL":"https://operator.worldcoin.org/apply","NEXT_PUBLIC_BETA_IOS_URL":"https://testflight.apple.com/join/GC0ngSh8","NEXT_PUBLIC_GTM_ID":"GTM-TJ6GVW6","NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA":"b618fc60220e28bf790949c598ddb478bcd61888","NEXT_PUBLIC_VERCEL_GIT_REPO_OWNER":"worldcoin","NEXT_PUBLIC_VERCEL_URL":"company-website-46y98meft-main-worldcoin.vercel.app","NEXT_PUBLIC_READING_SPEED_IN_WORDS_PER_MINUTE":"238","NEXT_PUBLIC_VERCEL_GIT_COMMIT_AUTHOR_LOGIN":"pufflik","NEXT_PUBLIC_OLD_APP_USERS":"259702","NEXT_PUBLIC_SUBSCRIPTION_POPUP_DELAY":"15000","NEXT_PUBLIC_VERCEL_GIT_COMMIT_REF":"main","NEXT_PUBLIC_SENDGRID_BLOG_UPDATES_LIST_ID":"b51933a3-f19d-4fbd-b5ba-7c48eb92441a","NEXT_PUBLIC_TECH_BLOG_CONTENT_PREFIX":"tech-blog-content","NEXT_PUBLIC_COOKIEPRO_DOMAIN_SCRIPT":"4508d921-4513-4b18-9093-124476c69c79","NEXT_PUBLIC_OPERATOR_WS_GRAPHQL_API_URL":"wss://api.operator.worldcoin.org/v1/graphql","NEXT_PUBLIC_ARTICLES_PER_PAGE":"10","NEXT_PUBLIC_IOS_APP_URL":"https://apps.apple.com/no/app/worldcoin-claim-send/id1560859847","NEXT_PUBLIC_STATS_REFRESH_RATE":"300000","NEXT_PUBLIC_MIN_ROUNDED_NUMBER":"1000","NEXT_PUBLIC_PACTSAFE_PRIVACY_STATEMENT_KEY":"contract-9l-r7n2jt","NEXT_PUBLIC_GRAPHQL_OPERATOR_APPLICATION_API_URL":"https://production.api.worldcoin-distributors.com/v1/graphql","NEXT_PUBLIC_VERCEL_GIT_PULL_REQUEST_ID":"","NEXT_PUBLIC_VERCEL_GIT_PREVIOUS_SHA":""},"isFallback":false,"gsp":true,"appGip":true,"locale":"en","locales":["en"],"defaultLocale":"en","scriptLoader":[]}</script></body></html>